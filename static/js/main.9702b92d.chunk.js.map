{"version":3,"sources":["components/MetricsDisplay.js","components/TextDisplay.js","App.js","index.js"],"names":["MetricsDisplay","_ref","precision","hallucination","positive","negative","_jsxs","className","children","_jsx","TextDisplay","content","App","documents","setDocuments","useState","selectedDocument","setSelectedDocument","metrics","setMetrics","document_converted","summary","setSummary","useEffect","fetch","concat","process","then","response","json","data","catch","error","console","htmlFor","id","onChange","event","documentName","target","value","map","doc","index","_Fragment","ReactMarkdown","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"iMA0BeA,MAxBQC,IAAuD,IAAtD,UAAEC,EAAS,cAAEC,EAAa,SAAEC,EAAQ,SAAEC,GAAUJ,EACpE,OACIK,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC5BC,cAAA,MAAAD,SAAI,uBACJF,eAAA,OAAKC,UAAU,SAAQC,SAAA,CACnBC,cAAA,MAAAD,SAAI,cACJC,cAAA,KAAAD,SAAIN,OAERI,eAAA,OAAKC,UAAU,SAAQC,SAAA,CACnBC,cAAA,MAAAD,SAAI,kBACJC,cAAA,KAAAD,SAAIL,OAERG,eAAA,OAAKC,UAAU,SAAQC,SAAA,CACnBC,cAAA,MAAAD,SAAI,qBACJC,cAAA,KAAAD,SAAIJ,OAERE,eAAA,OAAKC,UAAU,SAAQC,SAAA,CACnBC,cAAA,MAAAD,SAAI,qBACJC,cAAA,KAAAD,SAAIH,SAEN,ECXCK,MATKT,IAAkB,IAAjB,QAAEU,GAASV,EAC5B,OACIK,eAAA,OAAKC,UAAU,eAAcC,SAAA,CACzBC,cAAA,MAAAD,SAAI,oCACJC,cAAA,KAAAD,SAAIG,MACF,E,KCqECC,MAtEf,WACI,MAAOC,EAAWC,GAAgBC,mBAAS,KACpCC,EAAkBC,GAAuBF,mBAAS,OAClDG,EAASC,GAAcJ,mBAAS,CACnCb,UAAW,EACXC,cAAe,EACfC,SAAU,EACVC,SAAU,EACVe,mBAAoB,MAEjBC,EAASC,GAAcP,mBAAS,MAuBvC,OArBAQ,qBAAU,KACNC,MAAM,GAADC,OAAIC,0BAAsB,wBAC1BC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,GAAQhB,EAAagB,KAC1BC,OAAMC,GAASC,QAAQD,MAAM,gCAAiCA,IAAO,GAC3E,IAiBC1B,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAChBC,cAAA,MAAAD,SAAI,uBACJF,eAAA,OAAAE,SAAA,CACIC,cAAA,SAAOyB,QAAQ,kBAAiB1B,SAAC,sBACjCF,eAAA,UAAQ6B,GAAG,kBAAkBC,SAnBXC,IAC1B,MAAMC,EAAeD,EAAME,OAAOC,MAClCvB,EAAoBqB,GACpBd,MAAM,GAADC,OAAIC,0BAAsB,aAAAD,OAAYa,EAAY,UAClDX,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,GAAQX,EAAWW,KACxBC,OAAMC,GAASC,QAAQD,MAAM,2BAA4BA,KAE9DR,MAAM,GAADC,OAAIC,0BAAsB,aAAAD,OAAYa,EAAY,kBAClDX,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,GAAQR,EAAWQ,KACxBC,OAAMC,GAASC,QAAQD,MAAM,0BAA2BA,IAAO,EAQAxB,SAAA,CACxDC,cAAA,UAAQ+B,MAAM,GAAEhC,SAAC,0BAChBK,EAAU4B,KAAI,CAACC,EAAKC,IACjBlC,cAAA,UAAoB+B,MAAOE,EAAIlC,SAAEkC,GAApBC,WAIxB3B,GACGV,eAAAsC,WAAA,CAAApC,SAAA,CACIC,cAACC,EAAW,CAACC,QAAO,0BAAAc,OAA4BT,KAC/CK,GACGf,eAAA,OAAKC,UAAU,oBAAmBC,SAAA,CAC9BC,cAAA,MAAAD,SAAI,sBACJC,cAACoC,IAAa,CAAArC,SAAEa,EAAQA,aAGhCf,eAAA,OAAKC,UAAU,qBAAoBC,SAAA,CAC/BC,cAAA,MAAAD,SAAI,uBACJC,cAAA,OAAAD,SAAMU,EAAQE,wBAElBX,cAACT,EAAc,CACXE,UAAWgB,EAAQhB,UACnBC,cAAee,EAAQf,cACvBC,SAAUc,EAAQd,SAClBC,SAAUa,EAAQb,gBAM1C,ECrEAyC,IAASC,OACPtC,cAACuC,IAAMC,WAAU,CAAAzC,SACfC,cAACG,EAAG,MAENsC,SAASC,eAAe,Q","file":"static/js/main.9702b92d.chunk.js","sourcesContent":["import React from 'react';\n\nconst MetricsDisplay = ({ precision, hallucination, positive, negative }) => {\n    return (\n        <div className=\"metrics-display\">\n            <h2>Conversion Metrics</h2>\n            <div className=\"metric\">\n                <h3>Precision</h3>\n                <p>{precision}</p>\n            </div>\n            <div className=\"metric\">\n                <h3>Hallucination</h3>\n                <p>{hallucination}</p>\n            </div>\n            <div className=\"metric\">\n                <h3>Positive Aspects</h3>\n                <p>{positive}</p>\n            </div>\n            <div className=\"metric\">\n                <h3>Negative Aspects</h3>\n                <p>{negative}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default MetricsDisplay;","import React from 'react';\n\nconst TextDisplay = ({ content }) => {\n    return (\n        <div className=\"text-display\">\n            <h2>Conversion Results for Amethyst</h2>\n            <p>{content}</p>\n        </div>\n    );\n};\n\nexport default TextDisplay;","import React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport MetricsDisplay from './components/MetricsDisplay';\nimport TextDisplay from './components/TextDisplay';\nimport './styles/App.css';\n\nfunction App() {\n    const [documents, setDocuments] = useState([]);\n    const [selectedDocument, setSelectedDocument] = useState(null);\n    const [metrics, setMetrics] = useState({\n        precision: 0,\n        hallucination: 0,\n        positive: 0,\n        negative: 0,\n        document_converted: \"\"\n    });\n    const [summary, setSummary] = useState(null);\n\n    useEffect(() => {\n        fetch(`${process.env.PUBLIC_URL}/results/index.json`)\n            .then(response => response.json())\n            .then(data => setDocuments(data))\n            .catch(error => console.error('Error fetching document list:', error));\n    }, []);\n\n    const handleDocumentChange = (event) => {\n        const documentName = event.target.value;\n        setSelectedDocument(documentName);\n        fetch(`${process.env.PUBLIC_URL}/results/${documentName}.json`)\n            .then(response => response.json())\n            .then(data => setMetrics(data))\n            .catch(error => console.error('Error fetching document:', error));\n\n        fetch(`${process.env.PUBLIC_URL}/results/${documentName}_summary.json`)\n            .then(response => response.json())\n            .then(data => setSummary(data))\n            .catch(error => console.error('Error fetching summary:', error));\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Conversion Results</h1>\n            <div>\n                <label htmlFor=\"document-select\">Select Document: </label>\n                <select id=\"document-select\" onChange={handleDocumentChange}>\n                    <option value=\"\">--Select a document--</option>\n                    {documents.map((doc, index) => (\n                        <option key={index} value={doc}>{doc}</option>\n                    ))}\n                </select>\n            </div>\n            {selectedDocument && (\n                <>\n                    <TextDisplay content={`Conversion results for ${selectedDocument}`} />\n                    {summary && (\n                        <div className=\"executive-summary\">\n                            <h2>Executive Summary</h2>\n                            <ReactMarkdown>{summary.summary}</ReactMarkdown>\n                        </div>\n                    )}\n                    <div className=\"document-converted\">\n                        <h2>Converted Document</h2>\n                        <pre>{metrics.document_converted}</pre>\n                    </div>\n                    <MetricsDisplay \n                        precision={metrics.precision} \n                        hallucination={metrics.hallucination} \n                        positive={metrics.positive} \n                        negative={metrics.negative} \n                    />\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/App.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}